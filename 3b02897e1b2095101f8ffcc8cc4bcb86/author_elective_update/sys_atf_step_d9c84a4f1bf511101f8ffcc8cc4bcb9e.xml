<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step">
    <sys_atf_step action="DELETE">
        <active>true</active>
        <copied_from/>
        <description>Run Server Side Validation Script</description>
        <display_name>Run Server Side Script</display_name>
        <inputs/>
        <mugshots_cache_json/>
        <notes/>
        <order>2</order>
        <step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config>
        <sys_class_name>sys_atf_step</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-12 09:32:12</sys_created_on>
        <sys_id>d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="IntegrationHubDemo" source="x_832172_integra">3b02897e1b2095101f8ffcc8cc4bcb86</sys_package>
        <sys_policy/>
        <sys_scope display_value="IntegrationHubDemo">3b02897e1b2095101f8ffcc8cc4bcb86</sys_scope>
        <sys_update_name>sys_atf_step_d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-13 02:34:35</sys_updated_on>
        <table/>
        <test display_value="Integ Test">d884fd8f1bb511101f8ffcc8cc4bcbc1</test>
        <timeout/>
        <warning_message/>
    </sys_atf_step>
    <sys_variable_value action="DELETE" query="document_key=d9c84a4f1bf511101f8ffcc8cc4bcb9e"/>
    <sys_variable_value action="DELETE">
        <document>sys_atf_step</document>
        <document_key>d9c84a4f1bf511101f8ffcc8cc4bcb9e</document_key>
        <order>100</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-12 09:32:12</sys_created_on>
        <sys_id>b1cacec31b3911101f8ffcc8cc4bcbb0</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-12 09:32:12</sys_updated_on>
        <value>3.1</value>
        <variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable>
    </sys_variable_value>
    <sys_variable_value action="DELETE">
        <document>sys_atf_step</document>
        <document_key>d9c84a4f1bf511101f8ffcc8cc4bcb9e</document_key>
        <order>200</order>
        <sys_class_name>sys_variable_value</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-12 09:32:12</sys_created_on>
        <sys_id>b5cacec31b3911101f8ffcc8cc4bcbb0</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-13 02:34:35</sys_updated_on>
        <value>// You can use this step to execute a variety of server-side javascript tests including&#13;
// jasmine tests and custom assertions&#13;
//&#13;
//&#13;
// Pass or fail a step: Override the step outcome to pass or fail. This is ignored &#13;
//                      by jasmine tests&#13;
//&#13;
//  - Return true from the main function body to pass the step&#13;
//  - Return false from the main function body to fail the step&#13;
//&#13;
//&#13;
// outputs:       Pre-defined Step config Output variables to set on this step during &#13;
//                execution that are available to later steps&#13;
//&#13;
// steps(SYS_ID): A function to retrieve Output variable data from a step that executed&#13;
//                earlier in the test. The desired step's sys_id is required&#13;
//&#13;
// params:        The current test run data set's parameter data including both &#13;
//                exclusive and shared parameters&#13;
//&#13;
//  Example:&#13;
//&#13;
//      // Test step 1 - add data&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      // If parameterized testing is enabled, parameters are stored in the params object&#13;
//      gr.setValue('short_description', params.u_my_short_description)&#13;
//      gr.setValue('caller', params.u_my_user.manager)&#13;
//      // this sample step's Step config has Output variables named table and record_id&#13;
//      outputs.table = 'sc_task';&#13;
//      outputs.record_id = gr.insert();&#13;
//&#13;
//      // Test step 2 - access added data and validate&#13;
//      // check that the record exists (or that business logic changed it)&#13;
//      var gr = new GlideRecord("sc_task");&#13;
//      gr.get(steps(PREVIOUS_STEP_SYS_ID).record_id);&#13;
//      assertEqual({name: "task gr exists", shouldbe: true, value: gr.isValidRecord()});&#13;
//&#13;
//&#13;
// stepResult.setOutputMessage: Log a message to step results after step executes.&#13;
//                              Can only be called once or will overwrite previous &#13;
//                              message&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      gr.setValue('short_description', 'verify task can be inserted');&#13;
//      var grSysId = gr.insert();&#13;
//      var justCreatedGR = new GlideRecord('sc_task');&#13;
//      if (justCreatedGR.get(grSysId)) {&#13;
//            stepResult.setOutputMessage("Successfully inserted task record");&#13;
//            return true; // pass the step&#13;
//      } else { &#13;
//            stepResult.setOutputMessage("Failed to insert task record");&#13;
//            return false; // fail the step&#13;
//      }&#13;
//&#13;
//&#13;
// Note: describe is only supported in Global scope.&#13;
// Use 'describe' to create a suite of test scripts and 'it' to define test expectations&#13;
//&#13;
//  Example jasmine test:&#13;
//&#13;
//      describe('my suite of script tests', function() {&#13;
//            it('should meet expectations', function() {&#13;
//                  expect(true).not.toBe(false);&#13;
//            });&#13;
//      });&#13;
//      // make sure to uncomment jasmine.getEnv().execute(); outside the function body&#13;
//&#13;
//&#13;
// assertEqual: A function used to compare that assertion.shouldbe == assertion.value;&#13;
//              in case of failure it throws an Error and logs that the assertion by&#13;
//              name has failed&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var testAssertion = {&#13;
//            name: "my test assertion",&#13;
//            shouldbe: "expected value"&#13;
//            value: "actual value",&#13;
//      };&#13;
//      assertEqual(testAssertion); // throws Error, logs message to test step output&#13;
//&#13;
(function(outputs, steps, params, stepResult, assertEqual) {&#13;
	var gr = new GlideRecord('x_832172_integra_work_leaves');&#13;
	gr.addQuery("leave_date", "2023-01-02");&#13;
	gr.query();&#13;
	&#13;
	while (gr.next()) {&#13;
		var inputs = {}&#13;
		inputs['leave_record'] = gr&#13;
		&#13;
		var output = sn_fd.FlowAPI.executeAction('x_832172_slack_rep.post_message', inputs);&#13;
		var checkStatusCode = {&#13;
			name: "Check status code", &#13;
			shouldbe: '200', &#13;
			value: output['status_code']&#13;
		};&#13;
		&#13;
		var checkErrorCode = {&#13;
			name: "Check error code",&#13;
			shouldbe: "0",&#13;
			value: output['error_code']&#13;
		};&#13;
		&#13;
		assertEqual(checkStatusCode);&#13;
		assertEqual(checkErrorCode);&#13;
		&#13;
		outputs['status_code'] = output['status_code'];&#13;
	}&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
// uncomment the next line to execute this script as a jasmine test&#13;
//jasmine.getEnv().execute();&#13;
</value>
        <variable display_value="Test script">989d9e235324220002c6435723dc3484</variable>
    </sys_variable_value>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="IntegrationHubDemo">3b02897e1b2095101f8ffcc8cc4bcb86</application>
        <file_path/>
        <instance_id>3ed2a421dbf0f3c04d2bac44d4961916</instance_id>
        <instance_name>dev80684</instance_name>
        <name>sys_atf_step_d9c84a4f1bf511101f8ffcc8cc4bcb9e</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_atf_step"><sys_atf_step action="INSERT_OR_UPDATE"><active>true</active><copied_from/><description>Run Server Side Validation Script</description><display_name>Run Server Side Script</display_name><inputs/><mugshots_cache_json/><notes/><order>2</order><step_config display_value="Run Server Side Script">41de4a935332120028bc29cac2dc349a</step_config><sys_class_name>sys_atf_step</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2022-09-12 09:32:12</sys_created_on><sys_id>d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_id><sys_mod_count>8</sys_mod_count><sys_name>Run Server Side Script</sys_name><sys_package display_value="IntegrationHubDemo" source="x_832172_integra">3b02897e1b2095101f8ffcc8cc4bcb86</sys_package><sys_policy/><sys_scope display_value="IntegrationHubDemo">3b02897e1b2095101f8ffcc8cc4bcb86</sys_scope><sys_update_name>sys_atf_step_d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_update_name><sys_updated_by>admin</sys_updated_by><sys_updated_on>2022-09-13 02:34:35</sys_updated_on><table/><test display_value="Integ Test">d884fd8f1bb511101f8ffcc8cc4bcbc1</test><timeout/><warning_message/></sys_atf_step><sys_variable_value action="delete_multiple" query="document_key=d9c84a4f1bf511101f8ffcc8cc4bcb9e"/><sys_variable_value action="INSERT_OR_UPDATE"><document>sys_atf_step</document><document_key>d9c84a4f1bf511101f8ffcc8cc4bcb9e</document_key><order>100</order><sys_class_name>sys_variable_value</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2022-09-12 09:32:12</sys_created_on><sys_id>b1cacec31b3911101f8ffcc8cc4bcbb0</sys_id><sys_mod_count>0</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2022-09-12 09:32:12</sys_updated_on><value>3.1</value><variable display_value="Jasmine version">42f2564b73031300440211d8faf6a777</variable></sys_variable_value><sys_variable_value action="INSERT_OR_UPDATE"><document>sys_atf_step</document><document_key>d9c84a4f1bf511101f8ffcc8cc4bcb9e</document_key><order>200</order><sys_class_name>sys_variable_value</sys_class_name><sys_created_by>admin</sys_created_by><sys_created_on>2022-09-12 09:32:12</sys_created_on><sys_id>b5cacec31b3911101f8ffcc8cc4bcbb0</sys_id><sys_mod_count>8</sys_mod_count><sys_updated_by>admin</sys_updated_by><sys_updated_on>2022-09-13 02:34:35</sys_updated_on><value>// You can use this step to execute a variety of server-side javascript tests including&#13;
// jasmine tests and custom assertions&#13;
//&#13;
//&#13;
// Pass or fail a step: Override the step outcome to pass or fail. This is ignored &#13;
//                      by jasmine tests&#13;
//&#13;
//  - Return true from the main function body to pass the step&#13;
//  - Return false from the main function body to fail the step&#13;
//&#13;
//&#13;
// outputs:       Pre-defined Step config Output variables to set on this step during &#13;
//                execution that are available to later steps&#13;
//&#13;
// steps(SYS_ID): A function to retrieve Output variable data from a step that executed&#13;
//                earlier in the test. The desired step's sys_id is required&#13;
//&#13;
// params:        The current test run data set's parameter data including both &#13;
//                exclusive and shared parameters&#13;
//&#13;
//  Example:&#13;
//&#13;
//      // Test step 1 - add data&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      // If parameterized testing is enabled, parameters are stored in the params object&#13;
//      gr.setValue('short_description', params.u_my_short_description)&#13;
//      gr.setValue('caller', params.u_my_user.manager)&#13;
//      // this sample step's Step config has Output variables named table and record_id&#13;
//      outputs.table = 'sc_task';&#13;
//      outputs.record_id = gr.insert();&#13;
//&#13;
//      // Test step 2 - access added data and validate&#13;
//      // check that the record exists (or that business logic changed it)&#13;
//      var gr = new GlideRecord("sc_task");&#13;
//      gr.get(steps(PREVIOUS_STEP_SYS_ID).record_id);&#13;
//      assertEqual({name: "task gr exists", shouldbe: true, value: gr.isValidRecord()});&#13;
//&#13;
//&#13;
// stepResult.setOutputMessage: Log a message to step results after step executes.&#13;
//                              Can only be called once or will overwrite previous &#13;
//                              message&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var gr = new GlideRecord('sc_task');&#13;
//      gr.setValue('short_description', 'verify task can be inserted');&#13;
//      var grSysId = gr.insert();&#13;
//      var justCreatedGR = new GlideRecord('sc_task');&#13;
//      if (justCreatedGR.get(grSysId)) {&#13;
//            stepResult.setOutputMessage("Successfully inserted task record");&#13;
//            return true; // pass the step&#13;
//      } else { &#13;
//            stepResult.setOutputMessage("Failed to insert task record");&#13;
//            return false; // fail the step&#13;
//      }&#13;
//&#13;
//&#13;
// Note: describe is only supported in Global scope.&#13;
// Use 'describe' to create a suite of test scripts and 'it' to define test expectations&#13;
//&#13;
//  Example jasmine test:&#13;
//&#13;
//      describe('my suite of script tests', function() {&#13;
//            it('should meet expectations', function() {&#13;
//                  expect(true).not.toBe(false);&#13;
//            });&#13;
//      });&#13;
//      // make sure to uncomment jasmine.getEnv().execute(); outside the function body&#13;
//&#13;
//&#13;
// assertEqual: A function used to compare that assertion.shouldbe == assertion.value;&#13;
//              in case of failure it throws an Error and logs that the assertion by&#13;
//              name has failed&#13;
//&#13;
//  Example:&#13;
//&#13;
//      var testAssertion = {&#13;
//            name: "my test assertion",&#13;
//            shouldbe: "expected value"&#13;
//            value: "actual value",&#13;
//      };&#13;
//      assertEqual(testAssertion); // throws Error, logs message to test step output&#13;
//&#13;
(function(outputs, steps, params, stepResult, assertEqual) {&#13;
	var gr = new GlideRecord('x_832172_integra_work_leaves');&#13;
	gr.addQuery("leave_date", "2023-01-02");&#13;
	gr.query();&#13;
	&#13;
	while (gr.next()) {&#13;
		var inputs = {}&#13;
		inputs['leave_record'] = gr&#13;
		&#13;
		var output = sn_fd.FlowAPI.executeAction('x_832172_slack_rep.post_message', inputs);&#13;
		var checkStatusCode = {&#13;
			name: "Check status code", &#13;
			shouldbe: '200', &#13;
			value: output['status_code']&#13;
		};&#13;
		&#13;
		var checkErrorCode = {&#13;
			name: "Check error code",&#13;
			shouldbe: "0",&#13;
			value: output['error_code']&#13;
		};&#13;
		&#13;
		assertEqual(checkStatusCode);&#13;
		assertEqual(checkErrorCode);&#13;
		&#13;
		outputs['status_code'] = output['status_code'];&#13;
	}&#13;
&#13;
})(outputs, steps, params, stepResult, assertEqual);&#13;
// uncomment the next line to execute this script as a jasmine test&#13;
//jasmine.getEnv().execute();&#13;
</value><variable display_value="Test script">989d9e235324220002c6435723dc3484</variable></sys_variable_value></record_update>]]></payload>
        <payload_hash>1654947197</payload_hash>
        <record_name>Run Server Side Script</record_name>
        <reverted_from/>
        <source>7d225a031b2411101f8ffcc8cc4bcb4d</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-13 02:34:35</sys_created_on>
        <sys_id>56c4711f1b7551101f8ffcc8cc4bcb70</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>18334b2c9470000001</sys_recorded_at>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-09-13 02:34:35</sys_updated_on>
        <type>Test Step</type>
        <update_guid>1ec4711fb7755110c43072d9ac2a736f</update_guid>
        <update_guid_history>1ec4711fb7755110c43072d9ac2a736f:1654947197,7ecf8a8bdb391110977adf7a7948bfa7:668648180,a85e4e0b33391110783ad0114fb53014:196009497,7add024b503911102ac755b6b00e3719:-821671200,74cdc60b2c3911103b806d12f0326202:1100797821,316d068772391110f13d011102ea9fa9:1916330933,3aab8e47c1391110794003e49adaeef2:769553250,fd3b82474d391110305478a4fc01b353:-1740632935,71cacec3393911101a6dfc58e5156fb2:-595781039</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-09-13 02:37:15</sys_created_on>
        <sys_db_object display_value="" name="sys_atf_step">sys_atf_step</sys_db_object>
        <sys_id>a1f779df651249b8b1ebed8185fcdb99</sys_id>
        <sys_metadata>d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_metadata>
        <sys_name>Run Server Side Script</sys_name>
        <sys_package display_value="IntegrationHubDemo" source="x_832172_integra">3b02897e1b2095101f8ffcc8cc4bcb86</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="IntegrationHubDemo">3b02897e1b2095101f8ffcc8cc4bcb86</sys_scope>
        <sys_scope_delete display_value="">1dc26ef3364043b3bea1c1731083cf69</sys_scope_delete>
        <sys_update_name>sys_atf_step_d9c84a4f1bf511101f8ffcc8cc4bcb9e</sys_update_name>
        <sys_update_version display_value="sys_atf_step_d9c84a4f1bf511101f8ffcc8cc4bcb9e">56c4711f1b7551101f8ffcc8cc4bcb70</sys_update_version>
    </sys_metadata_delete>
</record_update>
